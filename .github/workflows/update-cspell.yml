name: "  ðŸ“š Update CodeTypo"

on:
  workflow_dispatch:
    inputs:
      base:
        description: The Base Ref to apply the diff
        required: false
        default: "main"

  push:
    branches:
      - main
    paths:
      - "**/package.json"
      - "**/package-lock.json"

  schedule:
    - cron: "0 7 * * *"

jobs:
  update-codetypo:
    if: github.repository_owner == 'khulnasoft'
    runs-on: ubuntu-latest
    env:
      NEW_BRANCH: update-codetypo-${{ inputs.base || 'main' }}
      REF_BRANCH: ${{ inputs.base || 'main' }}
    steps:
      - name: Start
        env:
          EVENT_INPUTS: ${{ toJson(github.event.inputs) }}
        run: |
          echo "$EVENT_INPUTS"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.REF_BRANCH }}

      - name: Setup
        uses: ./.github/actions/setup
        with:
          node-version: 18.x

      - name: Install
        run: |
          npm i

      - name: CodeTypo Old Version
        run: echo CODETYPO_VERSION_OLD=$(npx codetypo -V) >> $GITHUB_ENV

      - name: Update CodeTypo to latest
        run: |
          npm i codetypo@latest

      - name: CodeTypo Version
        run: echo CODETYPO_VERSION=$(npx codetypo -V) >> $GITHUB_ENV

      - name: Minor Versions
        run: |
          echo CODETYPO_MINOR_OLD=$(echo '"${{ env.CODETYPO_VERSION_OLD }}"' | jq 'sub("\\.[0-9]+$";"")') >> $GITHUB_ENV
          echo CODETYPO_MINOR_NEW=$(echo '"${{ env.CODETYPO_VERSION }}"' | jq 'sub("\\.[0-9]+$";"")') >> $GITHUB_ENV

      - name: Determine Update type
        env:
          type: ${{ (env.CODETYPO_MINOR_OLD == env.CODETYPO_MINOR_NEW && 'fix') || 'feat' }}
        run: |
          echo PR_TYPE=$type >> $GITHUB_ENV

      - name: Install
        run: npm install

      - name: Update Readme
        run: |
          npm run build:readme
          npm run lint:fix

      - name: Git Status
        id: git-status
        uses: khulnasoft/actions/public/dirty@v1

      - name: Echo git_status
        env:
          REPORT: |
            Dirty: ${{ steps.git-status.outputs.isDirty && 'yes' || 'no' }}
            CodeTypo Version: ${{ env.CODETYPO_VERSION }}
            Old Version: ${{ env.CODETYPO_VERSION_OLD }}
        run: |
          echo "$REPORT"

      - name: CodeTypo Version Msg
        id: codetypo_version_msg
        uses: khulnasoft/actions/public/output@v1
        with:
          value: CodeTypo version (${{ env.CODETYPO_VERSION }})

      - name: Commit Message
        id: commit_message
        uses: khulnasoft/actions/public/output@v1
        with:
          value: >-
            Update ${{ steps.codetypo_version_msg.outputs.value }}

      - name: Gen PR Body
        id: body
        uses: khulnasoft/actions/public/pr-body@v1
        with:
          title: ${{ steps.commit_message.outputs.value }}
          message: |
            **CodeTypo Version:** ${{ env.CODETYPO_VERSION_OLD }} -> ${{ env.CODETYPO_VERSION }}
            **Type:** ${{ env.PR_TYPE }}
          path: >-
            package.json

      - name: Show Summary
        uses: khulnasoft/actions/public/summary@v1
        with:
          text: |
            ${{ steps.body.outputs.body }}

            **Status:** ${{ steps.git-status.outputs.isDirty && 'dirty' || 'clean' }}

            ## Changes:

            ```
            ${{ steps.git-status.outputs.status }}
            ```

      - name: PR
        if: steps.git-status.outputs.isDirty
        uses: khulnasoft/actions/.github/actions/pr@v1
        with:
          commit-message: "${{ env.PR_TYPE }}: ${{ steps.commit_message.outputs.value }}"
          branch: ${{ env.NEW_BRANCH }}
          base: ${{ env.REF_BRANCH }}
          title: "${{ env.PR_TYPE }}: ${{ steps.commit_message.outputs.value }}"
          body: ${{ steps.body.outputs.body }}
          app_id: ${{ secrets.AUTOMATION_APP_ID }}
          app_private_key: ${{ secrets.AUTOMATION_PRIVATE_KEY }}
