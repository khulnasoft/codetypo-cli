Usage: codetypo lint [options] [globs...] [file://<path> ...] [stdin[://<path>]]

Patterns:
 - [globs...]            Glob Patterns
 - [stdin]               Read from "stdin" assume text file.
 - [stdin://<path>]      Read from "stdin", use <path> for file type and config.
 - [file://<path>]       Check the file at <path>

Examples:
    codetypo .                        Recursively check all files.
    codetypo lint .                   The same as "codetypo ."
    codetypo "*.js"                   Check all .js files in the current directory
    codetypo "**/*.js"                Check all .js files recursively
    codetypo "src/**/*.js"            Only check .js under src
    codetypo "**/*.txt" "**/*.js"     Check both .js and .txt files.
    codetypo "**/*.{txt,js,md}"       Check .txt, .js, and .md files.
    cat LICENSE | codetypo stdin      Check stdin
    codetypo stdin://docs/doc.md      Check stdin as if it was "./docs/doc.md"

Check spelling

Options:
  -c, --config <codetypo.json>   Configuration file to use.  By default codetypo
                               looks for codetypo.json in the current directory.
  -v, --verbose                Display more information about the files being
                               checked and the configuration.
  --locale <locale>            Set language locales. i.e. "en,fr" for English
                               and French, or "en-GB" for British English.
  --language-id <file-type>    Force programming language for unknown
                               extensions. i.e. "php" or "scala"
  --words-only                 Only output the words not found in the
                               dictionaries.
  -u, --unique                 Only output the first instance of a word not
                               found in the dictionaries.
  -e, --exclude <glob>         Exclude files matching the glob pattern. This
                               option can be used multiple times to add multiple
                               globs.
  --file-list <path or stdin>  Specify a list of files to be spell checked. The
                               list is filtered against the glob file patterns.
                               Note: the format is 1 file path per line.
  --file [file...]             Specify files to spell check. They are filtered
                               by the [globs...].
  --no-issues                  Do not show the spelling errors.
  --no-progress                Turn off progress messages
  --no-summary                 Turn off summary message in console.
  -s, --silent                 Silent mode, suppress error messages.
  --no-exit-code               Do not return an exit code if issues are found.
  --quiet                      Only show spelling issues or errors.
  --fail-fast                  Exit after first file with an issue or error.
  -r, --root <root folder>     Root directory, defaults to current directory.
  --no-relative                Issues are displayed with absolute path instead
                               of relative to the root.
  --show-context               Show the surrounding text around an issue.
  --show-suggestions           Show spelling suggestions.
  --no-show-suggestions        Do not show spelling suggestions or fixes.
  --no-must-find-files         Do not error if no files are found.
  --cache                      Use cache to only check changed files.
  --no-cache                   Do not use cache.
  --cache-reset                Reset the cache file.
  --cache-strategy <strategy>  Strategy to use for detecting changed files.
                               (choices: "content", "metadata", default:
                               "content")
  --cache-location <path>      Path to the cache file or directory. (default:
                               ".codetypocache")
  --dot                        Include files and directories starting with `.`
                               (period) when matching globs.
  --gitignore                  Ignore files matching glob patterns found in
                               .gitignore files.
  --no-gitignore               Do NOT use .gitignore files.
  --gitignore-root <path>      Prevent searching for .gitignore files past root.
  --validate-directives        Validate in-document CodeTypo directives.
  --color                      Force color.
  --no-color                   Turn off color.
  --no-default-configuration   Do not load the default configuration and
                               dictionaries.
  --debug                      Output information useful for debugging
                               codetypo.json files.
  --reporter <module|path>     Specify one or more reporters to use.
  --issue-template [template]  Use a custom issue template. See --help
                               --issue-template for details.
  -h, --help                   display help for command

More Examples:

    codetypo "**/*.js" --reporter @codetypo/codetypo-json-reporter
        This will spell check all ".js" files recursively and use
        "@codetypo/codetypo-json-reporter".

    codetypo . --reporter default
        This will force the default reporter to be used overriding
        any reporters defined in the configuration.

    codetypo . --reporter ./<path>/reporter.cjs
        Use a custom reporter. See API for details.

    codetypo "*.md" --exclude CHANGELOG.md --files README.md CHANGELOG.md
        Spell check only check "README.md" but NOT "CHANGELOG.md".

    codetypo "/*.md" --no-must-find-files --files $FILES
        Only spell check the "/*.md" files in $FILES,
        where $FILES is a shell variable that contains the list of files.

References:
    https://codetypo.org
    https://github.com/khulnasoft/codetypo

